// Generated by CoffeeScript 1.7.1
(function() {
  var Directory, File, getClangFlagsDotClangComplete, path, readFileSync, _ref;

  path = require('path');

  readFileSync = require('fs').readFileSync;

  _ref = require('pathwatcher'), File = _ref.File, Directory = _ref.Directory;

  module.exports = {
    getClangFlags: function(fileName) {
      return getClangFlagsDotClangComplete(fileName);
    },
    activate: function(state) {}
  };

  getClangFlagsDotClangComplete = function(fileName) {
    var args, contents, contentsArray, error, searchDir, searchFile, searchFilePath, thisDir;
    searchDir = path.dirname(fileName);
    args = [];
    while (searchDir.length) {
      searchFilePath = path.join(searchDir, ".clang_complete");
      searchFile = new File(searchFilePath);
      if (searchFile.exists()) {
        contents = "";
        try {
          contents = readFileSync(searchFilePath, 'utf8');
        } catch (_error) {
          error = _error;
          console.log("clang-flags for " + fileName + " couldn't read file " + searchFilePath);
          console.log(error);
        }
        contentsArray = contents.split("\n");
        args = args.concat(contentsArray);
        args = args.concat(["-working-directory=" + searchDir]);
        break;
      }
      thisDir = new Directory(searchDir);
      if (thisDir.isRoot()) {
        break;
      }
      searchDir = thisDir.getParent().getPath();
    }
    return args;
  };

}).call(this);
